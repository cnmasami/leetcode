# 统计各位数字之和为偶数的整数个数

# 给你一个正整数 num ，请你统计并返回小于或等于 num 且各位数字之和为
# 偶数 的正整数的数目。
#
# 正整数的 各位数字之和 是其所有位上的对应数字相加的结果。

class Solution:
    def countEven(self, num: int) -> int:
        def isEven(n: int) -> bool:
            sum = 0
            while n:
                n, mod = divmod(n, 10)
                sum += mod

            return sum % 2 == 0

        count = 0
        for i in range(2, num+1):
            if isEven(i):
                count += 1

        return count

    # 数学
    # 有两个简单的数学结论
    # 给定0 <= x < 10, 位于区间[0, x]内的偶数个数为x // 2 + 1
    # 位于区间[0, x]内的奇数个数为 x // 2
    # 位于区间[0, 10) 的奇数和偶数的个数都是5个
    # 我们将num表示为10 * y +x的形式，其中0 <= x < 10 且y>=0,
    # 那么位于区间[0, num]的整数可以分为两个部分：
    # 区间[10 * y + 0, 10 * y + x]:
    # 如果y的各位数字之和是偶数，那么该区间内各位数字之和为偶数的整数个数为 x // 2 + 1
    # 如果y的各位数字之和是奇数，那么该区间内各位数字之和为偶数的整数个数为x//2
    # 区间[0, 10 * y + 0):
    # 注意到该区间的数可以表示为10 * t + g的形式，其中0 <= t < y 且
    # 0 <= g < 10
    # 固定住t时， 如果t的各位数字之和为偶数，那么g为偶数的取值数目为5
    # 奇数时类似，因此该区间内的各位数字之和为偶数的整数个数为y * 5
    # 到上述区间中我们多计入了整数 0，
    # 因此结果应该是位于上述区间且各位数字之和为偶数的个数减 11。
    def countEven2(self, num: int) -> int:
        y, x = divmod(num, 10)
        # 因为每10个数必然有5个是偶数
        ans = y * 5
        y_sum = 0
        while y:
            y_sum += y % 10
            y //= 10

        return ans + ((x +1) // 2 - 1 if y_sum % 2 else x // 2)

    # 我们观察发现,在 [0,..x]的所有数中，每10个数中，就有5个数的各位数字之和为偶数。
    # 例如，在 [0,..9]中，每 10个数中，就有 5个数的各位数字之和为偶数，
    # 分别是 0,2,4,6,8
    # 因此，我们可以先算出num中有多少个10的倍数，
    # 然后乘以5再减去 1（排除 0这个非正整数偶数），
    # 可以得到初始答案 ans= (num // 10) * 5 - 1
    # 接下来，我们还需要考虑剩下的num%10+1个数字中，有多少个数的各位数字之和为偶数。
    # 这些数字是否是偶数，跟数字的前面数字之和有关，
    # 因此，我们可以算出 num的前面数字之和 s，那么剩余的数字中，
    # 还有(num% 10 + 2 - (s&1)) // 2个数的各位数字之和为偶数。累加到答案ans 中即可。
    #
    # 我们不妨举个例子，假设 num 为 123，
    # 那么前面[0,..119]中一共有 12 个 10的倍数，
    # 每个 10的倍数中有5 个数的各位数字之和为偶数，
    # 因此，初始答案为 ans=ans=12×5−1=59。
    # 剩下的数字分别是 120, 121, 122, 123，
    # 每个数字的前两位数字之和为s=1+2=3，是奇数，
    # 因此，剩下的数字中，只有 2 个数的各位数字之和为偶数，
    # 累加到答案 ans中，最终答案为 ans+2=61
    def countEven3(self, num: int) -> int:
        ans = num // 10 * 5 - 1
        x, s = num // 10, 0
        while x:
            s += x % 10
            x //= 10
        ans += (num % 10 + 2 - (s & 1)) >> 1
        return ans


a = Solution().countEven(30)
print(a)